# This references the default elm container from
# the Docker Hub: https://hub.docker.com/r/codesimple/elm/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: nodesource/node
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Install elm
    - script:
      code: npm install -g elm
    # A step that executes `elm install` command
    - script:
      code: elm package install -y
    # A step that executes `elm test` command
    # - elm test

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: build deliverables
        code: |
          elm make --output=public/widget.html

deploy:
  steps:
    - s3sync:
        key_id: $KEY
        key_secret: $SECRET
        bucket_url: $URL
        source_dir: public/
        delete_removed: false
        opts: --add-header=Cache-Control:max-age=1
